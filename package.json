{
  "name": "litee-snack",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "prisma:dev:deploy": "npx prisma migrate deploy",
    "prisma:test:deploy": "dotenv -e .env.test -- npx prisma migrate deploy",
    "prisma:dev:studio": "npx prisma studio",
    "prisma:test:studio": "dotenv -e .env.test -- npx prisma studio",
    "start": "node dist/main",
    "start:dev": "nest start --watch",
    "start:test": "npx dotenv -e .env.test nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "pretest:e2e": "dotenv -e .env.test -- npm run db:test:restart",
    "test:e2e": "dotenv -e .env.test -- jest --watch --no-cache --config ./test/jest-e2e.json",
    "db:dev:rm": "docker compose rm litee-snack-db -s -f -v",
    "db:dev:up": "docker compose up litee-snack-db -d",
    "db:dev:restart": "npm run db:dev:rm && npm run db:dev:up && npm run prisma:dev:deploy",
    "db:test:rm": "docker compose rm litee-snack-test-db -s -f -v",
    "db:test:up": "docker compose up litee-snack-test-db -d",
    "db:test:restart": "npm run db:test:rm && npm run db:test:up && npm run prisma:test:deploy"
  },
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  },
  "dependencies": {
    "@nestjs-modules/mailer": "^1.8.1",
    "@nestjs/apollo": "^10.1.7",
    "@nestjs/common": "^9.0.0",
    "@nestjs/config": "^2.2.0",
    "@nestjs/core": "^9.0.0",
    "@nestjs/graphql": "^10.1.7",
    "@nestjs/jwt": "^10.0.1",
    "@nestjs/passport": "^9.0.1",
    "@nestjs/platform-express": "^9.0.0",
    "@nestjs/schedule": "^2.2.2",
    "@prisma/client": "^4.9.0",
    "apollo-server-express": "^3.11.1",
    "argon2": "^0.30.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.13.2",
    "cookie-parser": "^1.4.6",
    "cross-env": "^7.0.3",
    "dotenv": "^16.0.3",
    "graphql": "^16.6.0",
    "graphql-subscriptions": "^2.0.0",
    "graphql-transport-ws": "^1.9.0",
    "joi": "^17.7.0",
    "nodemailer": "^6.9.1",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.1",
    "randomstring": "^1.2.3",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.2.0",
    "stripe": "^12.7.0",
    "subscriptions-transport-ws": "^0.11.0",
    "uninstall": "^0.0.0"
  },
  "devDependencies": {
    "@faker-js/faker": "^8.0.2",
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.0",
    "@nestjs/testing": "^9.0.0",
    "@types/cookie-parser": "^1.4.3",
    "@types/cron": "^2.0.1",
    "@types/express": "^4.17.13",
    "@types/jest": "29.2.4",
    "@types/node": "18.11.18",
    "@types/passport-jwt": "^3.0.8",
    "@types/randomstring": "^1.1.8",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "jest": "29.3.1",
    "jest-mock-extended": "^2.0.4",
    "node-mocks-http": "^1.12.1",
    "pactum": "^3.3.2",
    "prettier": "^2.3.2",
    "prisma": "^4.9.0",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "ts-jest": "29.0.3",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "4.1.1",
    "typescript": "^4.7.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "coveragePathIgnorePatterns": [
      "node_modules",
      ".entity.ts",
      ".dto.ts",
      ".enum.ts",
      ".guard.ts",
      ".strategy.ts",
      ".module.ts",
      ".decorator.ts",
      "index.ts",
      ".resolver.ts"
    ]
  }
}
